{"version":3,"sources":["logo.svg","Table.js","Form.js","Api.js","App.js","index.js"],"names":["module","exports","TableHeader","TableBody","data","rows","tableBodyData","map","item","index","key","name","job","onClick","removeCharacter","Table","props","bodyData","characterData","removeMethod","remove","Form","initialState","state","submitForm","handleSubmit","setState","handleChange","event","target","value","this","htmlFor","type","id","onChange","Component","Api","apiData","fetch","then","result","json","App","characters","filter","i","character","className","src","logo","alt","ReactDOM","render","document","getElementById"],"mappings":"0HAAAA,EAAOC,QAAU,IAA0B,kC,sMCErCC,G,MAAc,WAClB,OACE,+BACE,4BACE,oCACA,uCAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAKE,cAAcC,KAAI,SAACC,EAAMC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAKG,MACV,4BAAKH,EAAKI,KACV,4BACE,4BAAQC,QAAS,kBAAMT,EAAKU,gBAAgBL,KAA5C,eAMR,OAAO,+BAAQJ,IAeFU,EAZD,SAACC,GACb,IAAMC,EAAWD,EAAME,cACjBC,EAAeH,EAAMI,OAE3B,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWN,gBAAiBK,EAAcb,cAAeW,M,OCqBhDI,E,4MAtDbC,aAAe,CACbX,KAAM,GACNC,IAAK,I,EAGPW,MAAQ,EAAKD,a,EAiCbE,WAAa,WACX,EAAKR,MAAMS,aAAa,EAAKF,OAC7B,EAAKG,SAAS,EAAKJ,e,EAMrBK,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBlB,EADgB,EAChBA,KAAMmB,EADU,EACVA,MACd,EAAKJ,SAAL,eACGf,EAAOmB,K,uDA1CF,IAAD,EACeC,KAAKR,MAAnBZ,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,2BAAOoB,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLtB,KAAK,OACLuB,GAAG,OACHJ,MAAOnB,EACPwB,SAAUJ,KAAKJ,eAEjB,2BAAOK,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLtB,KAAK,MACLuB,GAAG,MACHJ,MAAOlB,EACPuB,SAAUJ,KAAKJ,eAEjB,4BAAQM,KAAK,SAASpB,QAASkB,KAAKP,YAApC,e,GA7BWY,aC4BJC,E,4MA3Bbd,MAAQ,CACNe,QAAS,I,kEAIU,IAAD,OAKlBC,MAHE,kGAICC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACL,EAAKf,SAAS,CAAEY,QAASG,S,+BAIrB,IAEFA,EADcV,KAAKR,MAAjBe,QACe/B,KAAI,SAACC,EAAMC,GAChC,OAAO,wBAAIC,IAAKD,GAAQD,MAG1B,OAAO,4BAAKiC,O,GAxBEL,aC6DHO,E,4MAvDbpB,MAAQ,CACNqB,WAAY,CACV,CACEjC,KAAM,UACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,mBAEP,CACED,KAAM,SACNC,IAAK,e,EAuBXE,gBAAkB,SAACL,GAAW,IACpBmC,EAAe,EAAKrB,MAApBqB,WACR,EAAKlB,SAAS,CACZkB,WAAYA,EAAWC,QAAO,SAACrC,EAAMsC,GAAP,OAAarC,IAAUqC,Q,EAQzDrB,aAAe,SAACsB,GACd,EAAKrB,SAAS,CAAEkB,WAAW,GAAD,mBAAM,EAAKrB,MAAMqB,YAAjB,CAA6BG,O,uDA/B/C,IACAH,EAAeb,KAAKR,MAApBqB,WACR,OACE,yBAAKI,UAAU,aACb,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,4CACA,kBAAC,EAAD,CAAOjC,cAAe0B,EAAYxB,OAAQW,KAAKjB,kBAC/C,iDACA,kBAAC,EAAD,CAAMW,aAAcM,KAAKN,eACzB,mDACA,kBAAC,EAAD,W,GA/BUW,a,MCFlBgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c81eb92e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nconst TableBody = (data) => {\r\n  const rows = data.tableBodyData.map((item, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{item.name}</td>\r\n        <td>{item.job}</td>\r\n        <td>\r\n          <button onClick={() => data.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return <tbody>{rows}</tbody>;\r\n};\r\n\r\nconst Table = (props) => {\r\n  const bodyData = props.characterData;\r\n  const removeMethod = props.remove; // method to remove table rows\r\n\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody removeCharacter={removeMethod} tableBodyData={bodyData} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: '',\r\n    job: '',\r\n  };\r\n\r\n  state = this.initialState;\r\n\r\n  render() {\r\n    const { name, job } = this.state;\r\n\r\n    return (\r\n      <form>\r\n        <label htmlFor='name'>Name</label>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          id='name'\r\n          value={name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor='job'>Job</label>\r\n        <input\r\n          type='text'\r\n          name='job'\r\n          id='job'\r\n          value={job}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type='button' onClick={this.submitForm}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   */\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  /**\r\n   * @description to listen changes in form field\r\n   */\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\n\r\nclass Api extends Component {\r\n  state = {\r\n    apiData: [],\r\n  };\r\n\r\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n  componentDidMount() {\r\n    const apiPath =\r\n      'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*';\r\n\r\n    // api call to fetch the data\r\n    fetch(apiPath)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        this.setState({ apiData: result });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { apiData } = this.state;\r\n    const result = apiData.map((item, index) => {\r\n      return <li key={index}>{item}</li>;\r\n    });\r\n\r\n    return <ul>{result}</ul>;\r\n  }\r\n}\r\n\r\nexport default Api;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Table from './Table';\nimport Form from './Form';\nimport Api from './Api';\n\nclass App extends Component {\n  state = {\n    characters: [\n      {\n        name: 'Charlie',\n        job: 'Janitor',\n      },\n      {\n        name: 'Mac',\n        job: 'Bouncer',\n      },\n      {\n        name: 'Dee',\n        job: 'Aspring actress',\n      },\n      {\n        name: 'Dennis',\n        job: 'Bartender',\n      },\n    ],\n  };\n  render() {\n    const { characters } = this.state;\n    return (\n      <div className='container'>\n        <img src={logo} className='App-logo' alt='logo' />\n        <h1>Hello React!</h1>\n        <Table characterData={characters} remove={this.removeCharacter} />\n        <h2>Add New Character</h2>\n        <Form handleSubmit={this.handleSubmit} />\n        <h3>Data fetch from api</h3>\n        <Api />\n      </div>\n    );\n  }\n\n  /**\n   * @description method to remove a character from the characters stored in the state\n   * @param index index param\n   */\n  removeCharacter = (index) => {\n    const { characters } = this.state;\n    this.setState({\n      characters: characters.filter((item, i) => index !== i),\n    });\n  };\n\n  /**\n   * @description method used when a form submit with a new character\n   * @param character\n   */\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] });\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}